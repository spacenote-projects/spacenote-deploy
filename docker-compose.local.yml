services:
  mongodb:
    image: mongodb/mongodb-community-server:8.2-ubi9
    container_name: spacenote-mongodb-local
    restart: unless-stopped
    environment:
      MONGODB_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGODB_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGODB_INITDB_DATABASE: spacenote
    volumes:
      - ./data/mongodb-local:/data/db
    networks:
      - spacenote-local
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ../spacenote-backend
      dockerfile: Dockerfile
    container_name: spacenote-backend-local
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      SPACENOTE_DATABASE_URL: mongodb://${MONGODB_ROOT_USERNAME}:${MONGODB_ROOT_PASSWORD}@mongodb:27017/spacenote?authSource=admin
      SPACENOTE_SESSION_SECRET_KEY: ${SESSION_SECRET_KEY}
      SPACENOTE_CORS_ORIGINS: '["http://localhost:4173", "http://127.0.0.1:4173"]'
      SPACENOTE_HOST: 0.0.0.0
      SPACENOTE_PORT: 8000
      SPACENOTE_DEBUG: ${DEBUG:-true}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - spacenote-local

  frontend:
    build:
      context: ../spacenote-frontend
      dockerfile: Dockerfile
    container_name: spacenote-frontend-local
    restart: unless-stopped
    ports:
      - "4173:4173"
    environment:
      API_URL: http://localhost:8000
    depends_on:
      - backend
    networks:
      - spacenote-local

networks:
  spacenote-local:
    driver: bridge